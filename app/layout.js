import localFont from "next/font/local";
import "./globals.css";
import dotenv from "dotenv";
import DatabaseFactory from "../app/database/databaseFactory"; // Import the database factory
import config from "../app/config/config"; // Import the configuration file

// Load environment variables (in non-production environments)
if (process.env.NODE_ENV !== "production") {
  dotenv.config({ path: ".env.local" });
}

// Initialize fonts
const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});

const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

// Initialize database connection
const db = DatabaseFactory(config); // Create a database instance

// Export metadata
export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <head>
        <link
          href="https://fonts.googleapis.com/css2?family=Great+Vibes&family=Merriweather:wght@400;700&display=swap"
          rel="stylesheet"
        />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}

// Example: Using the database instance to perform a query on app start
(async () => {
  try {
    const result = await db.query("SELECT * FROM rsvp");
    console.log("Database connection successful, initial data:", result);
  } catch (error) {
    console.error("Failed to fetch initial data:", error);
  }
})();
